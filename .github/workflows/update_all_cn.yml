name: Update all_cn.txt

# 触发条件：可以通过推送、拉取请求或者定时任务触发
on:
  # 允许通过推送或创建标签触发
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # 每天凌晨1点执行一次
  schedule:
    - cron: '0 1 * * *'

jobs:
  update-file:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # 使用最新版本的Python 3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests  # 如果需要额外的Python库，请在这里添加

    - name: Generate all_cn.txt
      run: |
        python -c "
import requests

url = 'https://ftp.apnic.net/stats/apnic/delegated-apnic-latest'
response = requests.get(url)
if response.status_code == 200:
    with open('all_cn.txt', 'w') as file:
        for line in response.text.splitlines():
            if line.startswith('#') or not line.strip():
                continue
            parts = line.split('|')
            if len(parts) > 5 and parts[1] == 'CN' and parts[2] == 'ipv4':
                ip_prefix = parts[3]
                num_ips = int(parts[4])
                cidr = 32 - int(num_ips).bit_length() + (int(num_ips)-1).bit_length()
                cidr_block = f'{ip_prefix}/{cidr}'
                file.write(cidr_block + '\n')
else:
    print('Failed to download the IP list.')
"

    - name: Generate all_cn.txt
      run: |
        python -c "
import requests

url = 'https://ftp.apnic.net/stats/apnic/delegated-apnic-latest'
response = requests.get(url)
if response.status_code == 200:
    with open('all_cn.txt', 'w') as file:
        for line in response.text.splitlines():
            parts = line.split('|')
            if len(parts) > 5 and parts[1] == 'CN' and parts[2] == 'ipv4':
                ip_prefix = parts[3]
                num_ips = int(parts[4])
                # Calculate the CIDR notation from the number of IP addresses.
                cidr = 32 - (num_ips - 1).bit_length()
                cidr_block = f'{ip_prefix}/{cidr}'
                file.write(cidr_block + '\n')
else:
    print('Failed to download the IP list.')
"
